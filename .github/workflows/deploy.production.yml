name: Deploy Langfuse

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment (e.g. staging, production)'
        required: true
        type: string

jobs:
  deploy-to-aks:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: |
          az aks get-credentials \
            --resource-group TRPL-Prod-AKS \
            --name TRPL-Prod-Cluster \
            --overwrite-existing

      - name: Create namespace if needed
        run: |
          kubectl create namespace ${{ inputs.environment }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply image pull secret (if needed)
        run: |
          kubectl create secret docker-registry acr-pull-secret \
            --docker-server=${{ vars.ACR_NAME }}.azurecr.io \
            --docker-username=${{ vars.ACR_USERNAME }} \
            --docker-password=${{ secrets.ACR_PASSWORD }} \
            -n ${{ inputs.environment }} \
            --dry-run=client -o yaml | kubectl apply -f - || true

      - name: Apply environment secrets
        run: |
          kubectl apply -f k8s/langfuse-env-secret.yaml -n ${{ inputs.environment }}

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/service.yaml -n ${{ inputs.environment }}
          kubectl apply -f k8s/ingress.yaml -n ${{ inputs.environment }}
          kubectl apply -f k8s/deployment.yaml -n ${{ inputs.environment }}
          kubectl apply -f k8s/worker-deployment.yaml -n ${{ inputs.environment }}

      - name: Wait for rollout
        run: |
          kubectl rollout status deployment/langfuse-web -n ${{ inputs.environment }} --timeout=5m
          kubectl rollout status deployment/langfuse-worker -n ${{ inputs.environment }} --timeout=5m
